#Program to extract Kinase data from data matrix generated by mass spec.
#April 17-2015
#output individual file for all tyrosine kinases with:
#row1 :IPname,row2: protein count, row3: Bait spectral counts

use strict;
use warnings;
use Statistics::R;

# open data matrix
open DH, "/Users/swati/Desktop/Tk-interactome-summary-analysis/All-data-compass-runs-160722/Comppass-runs-160726/Compass-runs-union-proteincount-selfpickbait-160808/Calculate-protein-count/compass-matrix.data.T"  or die $!;  
my @data_file = <DH>;
my $name = $ARGV[0]; #input name of tk
my @kinases = split ("\t", $data_file[1]);
my @cols;

#Extract columns with corresponding TK

for (my $i=0; $i<scalar(@kinases); $i++){
	if ($kinases[$i] eq $name)
	{	
		push (@cols, $i);	
	}
}
my $length = scalar @cols;

#write the all Tyrosine Kinase IPs in the file
open OUT, ">$name.IP" or die $!;  						

foreach (@data_file){
	my @rows = split ("\t", $_);	
	print OUT "$rows[0]\t";
		foreach (@cols){
			print OUT "$rows[$_]\t";		
		}
	print OUT "\n";
}
close OUT;

#remove first three lines from file for the cut command
`sed '1, 3d' $name.IP >$name.IP1`;					

#open a file to write data for all the tyrosine kinases
open DE, ">>All.data"  or die $!; 
open DH, "$name.IP" or die $!;
open OUT3, ">$name.plot"  or die $!;
my @name = <DH>;


my @data_IP = split ("\t", $name[0]);
shift@data_IP;my @na;
my $lines = join ("\t", @data_IP);					# add A to Run r script
print OUT3 "$lines";
push (@na, $lines);

#calculate protein count

my @data; my @no;
open PH, "$name.IP1" or die $!;
my @EG = <PH>;
shift@EG;shift@EG;shift@EG;
my @numbers = split ("\t", $EG[0]);
my $numbers = scalar(@numbers);
my $n=2;

while ($n > 0){
	my $cols = `cut -f $n $name.IP1`;
	my $columns = join ("\n", $cols);
	my @splitted = split ("\n", $columns);
	my $count =0;
	my $splitted = scalar@splitted;

		foreach (@splitted){
			if ($_ > 0){
				$count = $count + 1;  } 
			}
	
	push (@data, $count);
	
	push (@no, $count);
		if ($n == $numbers)
		{last;}
	$n++;
}
pop(@data);
print OUT3 "$name-PC\t";
print OUT3  join ("\t",@data);
print OUT3 "\n";

#check if bait is picking itself

open AH, "uniprot2name" or die $!;
my %tknames;

foreach (<AH>){

	my @rows =split("\=", $_);
	map{$_=~s/\n|\t|\s//g} @rows;
	$tknames{$rows[1]} =$rows[0];

}

open CH, "$name.IP" or die $!;
my @IPfile = <CH>;

my $ipnames = shift @IPfile;

foreach (@IPfile){

	my @rows = split("\t", $_);
	map{$_=~s/\n|\t|\s//g} @rows;
		
	if ($rows[0] eq $tknames{$name})
		{	my @selfcount = split("\t",$_);
			shift @selfcount;
			print OUT3 "$name-SP\t";
			print OUT3 join ("\t",@selfcount),"\n";
			
		}
	

}
close OUT3;
`rm $name.IP1`;

#generate transpose of compass input matrix using R 
my $R = Statistics::R->new();
$R->run('setwd("/Users/swati/Desktop/Tk-interactome-summary-analysis/All-data-compass-runs-160722/Comppass-runs-160726/Compass-runs-union-proteincount-selfpickbait-160808/Calculate-protein-count")');
$R->run(qq`table <- read.table("$name.plot", header=T)`);
$R->run('t=t(table)');
$R->run(qq`write.table(t, file="$name.plot.T", sep="\t", quote=FALSE, col.names=TRUE)`);

open FH, "$name.plot.T" or die $!;
my @transposed_data = <FH>;
shift @transposed_data;

foreach (@transposed_data){
	
	print DE "$name\t$_";

}

close DE;